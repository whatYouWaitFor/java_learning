传智播客  基础   视频复习
2018.1.16
servlet生命周期
1.servlet实例化，初始化  2.服务请求   3销毁
2.最常用实现方式：继承httpservlet，重写doget()和dopost()
3.servlet自动加载：<load-on-startup>1</load-on-startup>  -----数值越小，优先级越高
4.路径问题  绝对路径：以/开头  客户端绝对路径/web/demo1  服务端绝对路径/demo1(不需要写项目名)
			相对路径：不能以/开头 
5.servletConfig对象----和配置有关 
6.servletContext对象----域对象（这个是重点）
	一个web应用对应一个servletContext对象 
	一个web应用下有多个servlet程序
	一个web应用下的所有servlet程序共享同一个servletContext对象
	
	new FileInputStream("src/db.property")----这种是相对路径，如tomcat服务器，就是在tomcat/bin
	读取资源文件（*****）
	InputStream getResourceAsStream(String path)--通过文件的地址获取输入流
	String getRealPath(String path)---通过文件的地址获取文件的绝对磁盘路径，如c:\tool\tomcat
	
7.last-modefied ----  控制缓存 	

response对象
1.客户端做出响应使用response对象
	响应行
		状态码：setStatus(304)
	响应头
		setHeader("aa","bb")
		addHeader("bb","adsf");addHeader("bb","wew");
	响应体
		getOutputStream();--获得字节输出流 getWriter()--获得字符输出流

	response对象案例
	1.重定向  response.setRedirect("/sdsfs/sfds")--这个是response对象已经
	封装好的方法     底层方法还是response.setStatus(302);response.setHeader("location",)
	2.刷新页面
	response.setHeader("refresh,"5;url=/aaa/sfdsf/index.html")--5秒后刷新跳转页面
	效果等同于在页面上--<meta http-equiv="refresh" content="5;url=/day10/response/login.html">
	3.禁用浏览器缓存
	设置3个头信息
	response.setHeader("Cache-Control","no-cache");response.setHeader("Pragma","no-cache");response.setDateHeader("Expires","0");
	4.中文乱码
		字节流乱码 response.setHeader("content-type","text/html;charset=UTF-8");"sdfsf".getBytes("UTF-8");
		字符流乱码(response缓冲区的编码默认是iso-8859-1) response.setCharacterEncoding("UTF-8);response.setHeader("Content-Type","text/html;charset=UTF-8");
		
		上面语句可以总结写成：response.setContentType("text/html;charset=UTF-8");
	5.下载
		设置头信息 response.setHeader("content-disposition","attachement;filename=aaa.jpg")
	6.实现验证码
	
request对象
	getRemoteAddr();--获取ip地址，比如投票限制ip
	getContextPath();--获取虚拟路径
	
	request请求乱码（request缓冲区乱码）
		post请求--request.setCharacterEncoding("UTF-8")
		get请求--1.修改tomact目录下的server.xml文件；2.比较常用 new String("sss".getBytes("ISO-8859-1"),"UTF-8")
	重定向和请求转发
		request.getRequestDispatcher("/get").forward(request, response);
		response.sendRedirect("/day10/query")
		request.getParamter()

EL表达式
	获取  域对象   的内容    ====>   request.getAttritube

会话
	cookie
	session

JSP9个内置对象
	requset     HttpservletRequest
	response    HttpServletResponse
	appliaction ServletContext
	session     HttpSession
	config      ServletConfig
	
	out         JspWriter
	page        Object(基本上不用)
	exception   Throwable（需要在页面先声明isErrorPage="true"，才能使用）
	pageContext PagaContext(只在当前页面使用，范围比request还小；作用很大，可以获取其他8个对象，如getRequest())
	
4个域对象
servletContext（整个Web应用）；request；session（一个会话）；pageContext	

javaBean
定义：1.无参的构造方法 2.属性私有化 3.私有化属性要通过public类型暴露给其他程序

配置全局的错误页面，在web.xml里配置
<error-page>
	<error-code>404</error-code>
	<location>404.jsp</location>
	
	<error-code>500</error-code>
	<location>500.jsp</location>
</error-page>

redis
安装    1.下载stable版本  2.解压  3.make命令编译
命令    操作各种类型的数据
事务    比较鸡肋的功能，比较少用
持久化  rdb和aof，rdb（数据快照），aof是记录操作的命令

